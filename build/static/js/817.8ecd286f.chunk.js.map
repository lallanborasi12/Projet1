{"version":3,"file":"static/js/817.8ecd286f.chunk.js","mappings":"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","sources":["components/generalpages/Faq.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../common/Header\";\r\nimport { ReactSession } from \"react-client-session\";\r\nimport $ from \"jquery\";\r\nimport API_BASE_URL, { KETO_IMG_CDN_LIVE } from \"../../config/constants\";\r\nconst Faq = () => {\r\n  ReactSession.setStoreType(\"localStorage\");\r\n  const country_code = ReactSession.get(\"IpAddressData\")\r\n    ? ReactSession.get(\"IpAddressData\").country_code\r\n    : \"us\";\r\n  const [faq_data, set_faq_data] = useState([]);\r\n  const [citationsSite, setCitationsSite] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getFaqData();\r\n  }, []);\r\n\r\n  const getFaqData = () => {\r\n    const requestBody = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ country: country_code }),\r\n    };\r\n    fetch(API_BASE_URL + \"/pre/general/pages\", requestBody)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        result.forEach((pages, index) => {\r\n          if (pages?.name == \"citationsSite\") {\r\n            setCitationsSite(pages);\r\n          }\r\n          if (pages.name == \"faq\") {\r\n            set_faq_data(pages.description);\r\n            return;\r\n          }\r\n        });\r\n      }, [])\r\n      .catch((err) => {\r\n        $(\"#data_for_gen_page\").html(\r\n          \"<h3>Ouch! Something went wrong!<br> It seems you probably need expert's supervision to achieve your dream body. Kindly drop an email at support@ketobalanced.com<h3>\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const toggleAnswer = () => {\r\n    var acc = document.getElementsByClassName(\"question\");\r\n    var i;\r\n    for (i = 0; i < acc.length; i++) {\r\n      acc[i].addEventListener(\"click\", function () {\r\n        this.classList.toggle(\"active\");\r\n        var panel = this.nextElementSibling;\r\n        // console.log(panel.style.maxHeight);\r\n        if (panel.style.maxHeight != \"0px\") {\r\n          panel.style.maxHeight = \"0px\";\r\n          // console.log(\"close\");\r\n        } else {\r\n          panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n          // console.log(\"Open\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // toggleAnswer();\r\n  });\r\n\r\n  return (\r\n    <span>\r\n      {/* <link rel=\"stylesheet\" href=\"css2/style.css\"></link> */}\r\n      <Header />\r\n      <main className=\"inner-gap\">\r\n        <div className=\"inner-pages-content inner-pages-content2\">\r\n          <h1 className=\"t-center bottom-gap-2\">\r\n            Frequently Asked <strong>Questions</strong>\r\n          </h1>\r\n          <div\r\n            className=\"white-box\"\r\n            style={{\r\n              margin: \"auto\",\r\n              overflow: \"hidden\",\r\n              maxHeight: \"fit-content\",\r\n            }}\r\n            id=\"faq-data\"\r\n          >\r\n            {faq_data.map((questions, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={() => {\r\n                  toggleAnswer();\r\n                }}\r\n              >\r\n                <div className=\"question\">\r\n                  <div className=\"title\">\r\n                    <span className=\"num\">{index + 1}</span>\r\n                    <img\r\n                      className=\"plsIcon\"\r\n                      src={KETO_IMG_CDN_LIVE + \"/plus.png\"}\r\n                    />\r\n                    <img\r\n                      className=\"minusIcon\"\r\n                      src={KETO_IMG_CDN_LIVE + \"/minus.png\"}\r\n                    />\r\n                    {questions.q}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"answer\"\r\n                  style={{\r\n                    maxHeight: \"0\",\r\n                    overflow: \"hidden\",\r\n                    transition:\r\n                      \"max-height 0.2s ease-out;padding: 0px 0px 1px 55px\",\r\n                  }}\r\n                  dangerouslySetInnerHTML={{ __html: questions.a }}\r\n                ></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <br />\r\n            <br />\r\n            <strong style={{ fontSize: \"11px\" }}>\r\n              Citations and study links:\r\n            </strong>\r\n            <ul\r\n              style={{\r\n                listStyle: \"none\",\r\n                paddingLeft: \"0\",\r\n                fontSize: \"10px\",\r\n              }}\r\n            >\r\n              {citationsSite?.description?.map((citation_row, index) => {\r\n                return (\r\n                  <li key={index}>\r\n                    <a href={citation_row} style={{ color: \"#FF3464\" }}>\r\n                      {citation_row}\r\n                    </a>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </main>\r\n\r\n      <script src=\"js/font-awesome.js\"></script>\r\n    </span>\r\n  );\r\n};\r\nexport default React.memo(Faq);\r\n"],"names":["Faq","_citationsSite$descri","ReactSession","setStoreType","country_code","get","faq_data","set_faq_data","useState","citationsSite","setCitationsSite","useEffect","getFaqData","requestBody","method","headers","body","JSON","stringify","country","fetch","API_BASE_URL","then","res","json","result","forEach","pages","index","name","description","catch","err","$","html","toggleAnswer","i","acc","document","getElementsByClassName","length","addEventListener","this","classList","toggle","panel","nextElementSibling","style","maxHeight","scrollHeight","_jsxs","children","_jsx","Header","className","margin","overflow","id","map","questions","onClick","src","KETO_IMG_CDN_LIVE","q","transition","dangerouslySetInnerHTML","__html","a","fontSize","listStyle","paddingLeft","citation_row","href","color","React"],"sourceRoot":""}