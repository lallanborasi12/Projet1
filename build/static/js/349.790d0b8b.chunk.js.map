{"version":3,"file":"static/js/349.790d0b8b.chunk.js","mappings":"iMAMA,MAAMA,EAAoBA,KAEtBC,EAAAA,EAAaC,aAAa,gBAC1B,MAAMC,EAAeF,EAAAA,EAAaG,IAAI,iBAAmBH,EAAAA,EAAaG,IAAI,iBAAiBD,aAAe,MACnGE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAEzCC,EAAAA,EAAAA,YAAU,KACNC,GAAa,GACd,IACH,MAAMA,EAAcC,UAChB,MAAMC,EAAc,CAChBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjB,QAAWb,WAMbc,MAAMC,EAAAA,EAAe,qBAAsBP,GAC5CQ,MAAKC,GAAOA,EAAIC,SAChBF,MAAMG,IAGHA,EAAOC,SAAQ,CAACC,EAAOC,KAED,sBAAdD,EAAME,MACNC,IAAE,sBAAsBC,KAAKJ,EAAMK,YAEvC,GACF,IAEHC,OAAOC,IACNJ,IAAE,sBAAsBC,KAAK,uKAAuK,GACtM,EAEV,OACII,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPJ,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAEhCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAsBI,MAAO,CAAEC,OAAQ,OAAQC,SAAU,SAAUC,UAAW,eAAiBC,GAAG,oBAAmBP,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAIjJC,EAAAA,EAAAA,KAAA,aAGJA,EAAAA,EAAAA,KAAA,UAAQO,IAAI,yBACR,EAGhB,EAAeC,EAAAA,KAAW3C,E","sources":["components/generalpages/General_conditions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../common/Header\";\r\nimport { ReactSession } from 'react-client-session';\r\nimport $ from \"jquery\";\r\nimport API_BASE_URL from \"../../config/constants\";\r\nconst General_condtions = () => {\r\n\r\n    ReactSession.setStoreType('localStorage');\r\n    const country_code = ReactSession.get('IpAddressData') ? ReactSession.get('IpAddressData').country_code : \"us\";\r\n    const [genPages, setGenPages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getGenPages();\r\n    }, []);\r\n    const getGenPages = async () => {\r\n        const requestBody = {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"country\": country_code\r\n            })\r\n        }\r\n\r\n        // console.log(requestBody);\r\n        // return false;\r\n        await fetch(API_BASE_URL + '/pre/general/pages', requestBody)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n\r\n\r\n                result.forEach((pages, index) => {\r\n\r\n                    if (pages.name == \"general_conditions\") {\r\n                        $('#data_for_gen_page').html(pages.description);\r\n                        return;\r\n                    }\r\n                });\r\n\r\n            }).catch((err) => {\r\n                $('#data_for_gen_page').html(\"<h3>Ouch! Something went wrong!<br> It seems you probably need expert's supervision to achieve your dream body. Kindly drop an email at support@ketobalanced.com<h3>\");\r\n            })\r\n    }\r\n    return (\r\n        <span className=\"text-center\">\r\n            <Header></Header>\r\n            <main className=\"inner-gap\">\r\n                <div className=\"inner-pages-content\">\r\n\r\n                    <div className=\"white-box p-content\" style={{ margin: 'auto', overflow: 'hidden', maxHeight: 'fit-content' }} id=\"data_for_gen_page\"><strong>Loading....</strong>\r\n                    </div>\r\n\r\n                </div>\r\n                <br />\r\n            </main>\r\n\r\n            <script src=\"js/font-awesome.js\"></script>\r\n        </span >\r\n    )\r\n}\r\nexport default React.memo(General_condtions);\r\n"],"names":["General_condtions","ReactSession","setStoreType","country_code","get","genPages","setGenPages","useState","useEffect","getGenPages","async","requestBody","method","headers","body","JSON","stringify","fetch","API_BASE_URL","then","res","json","result","forEach","pages","index","name","$","html","description","catch","err","_jsxs","className","children","_jsx","Header","style","margin","overflow","maxHeight","id","src","React"],"sourceRoot":""}