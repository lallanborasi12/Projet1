{"version":3,"file":"static/js/176.f141e56c.chunk.js","mappings":"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","sources":["components/common/Footer.js","components/generalpages/Contact.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { ReactSession } from 'react-client-session';\r\nimport logo from \"../../logo.svg\";\r\n\r\nexport default function Footer() {\r\n\r\n  const [isRouteName, setRouteName] = useState(null);\r\n  const [footerShowRoute, setFooterShowRoute] = useState(['/', '/over40', '/men', '/women', \"/contact.html\", \"/final.php\"]);\r\n  const [footerHideRoute, setFooterHideRoute] = useState([\"/final.php\"]);\r\n  const location = useLocation();\r\n\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n\r\n\r\n  ReactSession.setStoreType('localStorage');\r\n\r\n  useEffect(() => {\r\n    getRouteName();\r\n  })\r\n  const getRouteName = () => {\r\n    const routeName = location.pathname;\r\n    setRouteName(routeName);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {\r\n\r\n        footerShowRoute.includes(isRouteName) ? (\r\n          ReactSession.get('ketobalanced_options') && JSON.parse(ReactSession.get('ketobalanced_options')).survey.company_address !== undefined ? (\r\n            <>\r\n              {/* common_icons[\"logo\"] */}\r\n              <div className='footer ftr-menu'>\r\n                <img src={logo} alt='logo' width={55} height={26} />\r\n                <p className='tex1'><a href=\"https://user.ketobalanced.com/\">Access My Plan,</a>  | <Link to={\"/general-conditions.html\"}>General Conditions</Link> | <Link to={\"/data-protection-policy.html\"}>Data Policy</Link> | <Link to={\"/faq.html\"}>FAQ</Link> | <Link to={\"/contact.html\"}>Contact Us</Link> | <Link to={\"/privacy-policy.html\"}>Privacy Policy</Link> |<Link to={\"/cookie-policy.html\"}>Cookie Policy</Link> </p>\r\n\r\n\r\n                {\r\n                  JSON.parse(ReactSession.get('ketobalanced_options')).survey.company_address.map((address, index) => (\r\n                    <p key={index} className=\"ftr-mob\">\r\n                      <b>{address.company},</b> {address.address}\r\n                    </p>\r\n                  ))\r\n                }\r\n                < p className=\"ftr-mob\">\r\n                  {year} @ All rights reserved<br />\r\n                  Disclaimer: Results are subject to individuals so it may vary.\r\n                </p>\r\n              </div>\r\n            </>\r\n\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )\r\n\r\n      }\r\n      <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-KHDHLVW\" height=\"80\" width=\"80\" style=\"display:none;visibility:hidden\"></iframe></noscript>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API_BASE_URL from \"../../config/constants\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../common/Header\";\r\nimport { ReactSession } from 'react-client-session';\r\nimport $ from 'jquery';\r\nimport Footer from \"../common/Footer\";\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    ReactSession.setStoreType('localStorage');\r\n    const country_code = ReactSession.get('IpAddressData') ? ReactSession.get('IpAddressData').country_code : \"us\";\r\n    const [getContactDescription, setContactDescription] = useState([]);\r\n    useEffect(() => {\r\n        getContactData();\r\n    });\r\n    const getContactData = () => {\r\n        const requestBody = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ 'country': country_code })\r\n        }\r\n        fetch(API_BASE_URL + '/pre/general/pages', requestBody)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n\r\n                result.forEach((pages, index) => {\r\n\r\n                    if (pages.name == \"contacts\") {\r\n                        $('#con_page_desc').html(pages.description);\r\n                        return;\r\n                    }\r\n                });\r\n\r\n\r\n            }).catch((err) => {\r\n                $('#data_for_gen_page').html(\"<h3>Ouch! Something went wrong!<br> It seems you probably need expert's supervision to achieve your dream body. Kindly drop an email at support@ketobalanced.com<h3>\");\r\n            })\r\n    }\r\n\r\n    const postContactForm = (form) => {\r\n        const name_value = $('#name').val();\r\n        const email_value = $('#email').val();\r\n        const message_value = $('#message').val();\r\n        if (name_value == \"\" || email_value == \"\" || !email_value.includes(\"@\") || message_value == \"\") {\r\n            $('#error').html('<p className=\"text-danger\">All fields are required**</p>');\r\n        }\r\n        else {\r\n            const postBody = {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ \"name\": name_value, \"email\": email_value, \"message\": message_value, \"country\": country_code })\r\n            }\r\n            // console.log(postBody);\r\n            // return false;\r\n            fetch(API_BASE_URL + \"/pre/general/pages/contact\", postBody)\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    if (result.message == undefined) {\r\n                        $('#error').html('<p className=\"alert alert-danger\">' + result.error.message + '</p>');\r\n                    } else {\r\n                        $('#error').html('<p className=\"alert alert-success\">' + result.message + '</p>');\r\n                    }\r\n\r\n                }).catch((err) => {\r\n                    $('#data_for_gen_page').html(\"Ouch! Something went wrong!<br> It seems you probably need expert's supervision to achieve your dream body. Kindly drop an email at support@ketobalanced.com\");\r\n                    // console.log('error');\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <span>\r\n\r\n            <Header />\r\n            <main className=\"inner-gap\">\r\n                <div className=\"inner-pages-content inner-pages-content2\">\r\n                    <h1 className=\"t-center\">Get in <strong>Touch</strong></h1>\r\n                    <div className=\"\" style={{ margin: 'auto' }} >{/* white-box */}\r\n\r\n\r\n                        <div className=\"flx jc-sb contact-box gap\">\r\n                            <ul id=\"con_page_desc\">\r\n\r\n                            </ul>\r\n\r\n                            <div className=\"contact-form\" style={{ width: \"100%\" }}>\r\n                                <div className=\"form-group\">\r\n                                    <div id=\"contact_error\"></div>\r\n                                </div>\r\n\r\n                                {/* <form id=\"user_contact_form\"> */}\r\n                                <input className=\"form-control\" type=\"text\" placeholder=\"Your full name*\" id=\"name\" required />\r\n                                <input className=\"form-control\" type=\"email\" placeholder=\"Email Address*\" id=\"email\" required />\r\n                                <textarea className=\"form-control\" placeholder=\"Message*\" id=\"message\" required></textarea>\r\n                                <strong id=\"error\"></strong>\r\n                                <button className=\"main3\" style={{ border: \"1px solid #ff3464\" }} onClick={postContactForm}>Submit</button>\r\n\r\n                                {/* </form> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </main>\r\n            <Footer />\r\n            <script src=\"js/font-awesome.js\"></script>\r\n        </span>\r\n    )\r\n\r\n}\r\nexport default React.memo(Contact);\r\n"],"names":["Footer","isRouteName","setRouteName","useState","footerShowRoute","setFooterShowRoute","footerHideRoute","setFooterHideRoute","location","useLocation","year","Date","getFullYear","ReactSession","setStoreType","useEffect","getRouteName","routeName","pathname","_jsxs","_Fragment","children","includes","get","undefined","JSON","parse","survey","company_address","_jsx","className","src","logo","alt","width","height","href","Link","to","map","address","index","company","style","Contact","country_code","getContactDescription","setContactDescription","getContactData","requestBody","method","headers","body","stringify","fetch","API_BASE_URL","then","res","json","result","forEach","pages","name","$","html","description","catch","err","Header","margin","id","type","placeholder","required","border","onClick","form","name_value","val","email_value","message_value","postBody","message","error","React"],"sourceRoot":""}