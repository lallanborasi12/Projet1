{"version":3,"file":"static/js/593.36869e92.chunk.js","mappings":"oKAGA,MAAMA,EAAiBC,EAAAA,MAAW,IAChC,wDAGIC,EAAOA,KACX,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GA4B3C,OA1BAC,EAAAA,EAAAA,YAAU,MAgBcC,EAAAA,EAAAA,GAAU,CAC9BC,MAAO,iBACPC,MAAO,qBAhBSC,WAChB,UAEQ,IAAIC,SAASC,GAAYC,WAAWD,EAAS,OAGnDR,GAAa,EACf,CAAE,MAAOU,GAEPC,QAAQD,MAAM,uBAAwBA,EACxC,GAUFE,EAAW,GACV,IAGCb,GACKc,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAKdD,EAAAA,EAAAA,KAACE,EAAAA,SAAQ,CAACC,UAAUH,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAAIG,UAC7BJ,EAAAA,EAAAA,KAACjB,EAAc,KACN,EAIf,EAAeC,EAAAA,KAAWC,E","sources":["components/pages/Home.js"],"sourcesContent":["import React, { Suspense, useEffect, useRef, useState } from \"react\";\r\nimport Loader from \"../common/Loader\";\r\nimport { DataLayer } from \"../common/Function\";\r\nconst HomeController = React.lazy(() =>\r\n  import(\"../../controllers/HomeController\")\r\n);\r\n\r\nconst Home = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulating data fetching (replace this with your actual data fetching logic)\r\n    const fetchData = async () => {\r\n      try {\r\n        // Simulating a delay for demonstration purposes\r\n        await new Promise((resolve) => setTimeout(resolve, 150));\r\n\r\n        // Once the data is fetched, update the isLoading state\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        // Handle errors if needed\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    // Push the event to the dataLayer\r\n    const dataLayer_res = DataLayer({\r\n      event: \"genderPageView\",\r\n      stage: \"Gender Selection\",\r\n    });\r\n\r\n    // Call the fetchData function\r\n    fetchData();\r\n  }, []); // Empty dependency array ensures that this effect runs only once\r\n\r\n  // If data is still loading, display the Loader\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  // If data has been loaded, display the HomeController\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <HomeController />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(Home);\r\n"],"names":["HomeController","React","Home","isLoading","setIsLoading","useState","useEffect","DataLayer","event","stage","async","Promise","resolve","setTimeout","error","console","fetchData","_jsx","Loader","Suspense","fallback","children"],"sourceRoot":""}